@model JobOffer
@{
    ViewData["Title"] = "Details";
}

<div class="card text-center">
    <div class="card-header">
        <div class="d-flex align-items-center">
            <div class="pr-3">
                <a href="@Url.Action("Index", "JobOffer")">
                    <i class="fas fa-chevron-circle-left"></i>
                </a>
            </div>
            <h3 class="mb-1">
                @Model.Title
            </h3>
        </div>
    </div>

    <ul class="list-group list-group-flush">
        <li class="list-group-item">
            <h4 class="card-title">Overview</h4>
            <p class="card-text">@Model.Overview</p>
        </li>
        <li class="list-group-item">
            <h4 class="card-title">Salary</h4>
            <p class="card-text">@Model.SalaryFrom - @Model.SalaryTo @Model.Currency</p>
        </li>
        <li class="list-group-item">
            <h4 class="card-title">Specialization</h4>
            <p class="card-text">@Model.Specialization</p>
        </li>
        <li class="list-group-item">
            <h4 class="card-title">Location</h4>
            <p class="card-text">@Model.Location</p>
        </li>
        <li class="list-group-item">
            <h4 class="card-title">Added on</h4>
            <p class="card-text">@Model.AddedOn.ToShortDateString()</p>
        </li>
        <li class="list-group-item">
            <h4 class="card-title">Description</h4>
            <p class="card-text">@Model.Description</p>
        </li>
    </ul>
    @if (Model.ValidUntil.HasValue)
    {
        <div class="card-footer text-muted">
            @Model.ValidUntil.Value.Subtract(DateTime.Now).Days days left(@Model.ValidUntil.Value.ToShortDateString())
        </div>
    }
</div>

<div>
    <div class="col-sm-12">
        <table class="table table-striped table-hover" id="JobApplications">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Full Name</th>
                    <th scope="col">E-mail</th>
                    <th scope="col">Phone</th>
                </tr>
            </thead>
            <tbody>

                @*@foreach (JobApplication jobApplication in Model.JobApplications)
                    {
                        <tr>
                            <td>@Html.ActionLink(jobApplication.FirstName + " " + jobApplication.LastName, "Index", "Home")</td>
                            <td>@jobApplication.EmailAddress</td>
                            <td>@jobApplication.PhoneNumber</td>
                        </tr>
                    }*@
            </tbody>
        </table>
    </div>
    <div class="col-sm-12 d-inline-block">
        <a href="@Url.Action("Create", "JobApplication", new { Model.Id })"
           class="btn rounded btn-primary">
            <i class="fas fa-paper-plane"
               title="Apply"></i>
            Apply
        </a>
        <a href="@Url.Action("Edit", "JobOffer", new { Model.Id })"
           class="btn rounded btn-primary">
            <i class="fas fa-edit"
               title="Edit"></i>
            Edit
        </a>
        <button class="btn btn-rounded btn-danger"
                data-toggle="modal"
                data-target="#confirm-delete">
            <i class="fas fa-trash-alt"></i>
            Delete
        </button>
    </div>
</div>


<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title">Delete Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <p class="font-weight-bold mb-0">Are you sure you want to delete this?</p>
                <p class="text-danger mb-0"><small>This action cannot be undone.</small></p>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    <i class="far fa-window-close"></i>
                    Cancel
                </button>
                @using (Html.BeginForm("Delete", "JobOffer", new { Model.Id }, FormMethod.Post, null, new { style = "display:inline;" }))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-rounded btn-danger">
                        <i class="fas fa-trash-alt"></i>
                        Delete
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    var uri = '/api/JobApplicationAPI';

    // Send an AJAX request when document is ready
    $(document).ready(function () {
        // Get OfferID of current offer
        var id =  @Html.Raw(Model.Id);
        // On success, 'data' contains a list of Job Applications.
        $.getJSON(uri + '/' + id).done(function (data) {
            //No application in database
            if ( isArrayEmpty(data) ) {
                $("<tr><td>There are no applications in database for this offer.</td><td></td><td></td></tr>").appendTo('#JobApplications');
                return;
            }
            $.each(data, function (key, jobApplication) {
                    var rows = "<tr>"
                    + "<td>" + jobApplication.firstName +  " " + jobApplication.lastName + "</td>"
                    + "<td>" + jobApplication.emailAddress + "</td>"
                    + "<td>" + jobApplication.phoneNumber + "</td>"
                    + "</tr>";
                    // Add a list item for the product.
                    $(rows).appendTo($('#JobApplications'));
                });
            });
    })

        function isArrayEmpty(array) {
            return array.filter(function (el) {
                return !jQuery.isEmptyObject(el);
            }).length === 0;
        }
    </script>
}