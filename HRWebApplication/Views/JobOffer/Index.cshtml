@model List<JobOffer>
@{
    ViewData["Title"] = "Job Offers";
    var selectedPage = 0;
}

<h1>Available job offers</h1>

@using (Html.BeginForm("Index", "JobOffer", FormMethod.Get))
{
    <div class="input-group col-md-12" style="margin-bottom: 14px">
        <input type="text" class="form-control" placeholder="Search"
               name="search" id="search" />
        <span class="input-group-btn">
            <button class="btn btn-info" type="submit">
                <i class="glyphicon glyphicon-search"></i>
            </button>
        </span>
    </div>
}

@Html.ActionLink("Create new offer", "Create" , "JobOffer", null, new { @class = "btn btn-primary" })

<div class="card-deck">

    @foreach (JobOffer jobOffer in Model)
    {
        <div class="card bg-light mb-3" style="max-width: 18rem;">
            <div class="card-header">@Html.ActionLink(jobOffer.Title, "Details", new { id = jobOffer.Id })</div>
            <div class="card-body">
                <h5 class="card-title">@jobOffer.SalaryFrom - @jobOffer.SalaryTo @jobOffer.Currency</h5>
                <p class="card-text">@jobOffer.Overview</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Location: @jobOffer.Location</li>
                <li class="list-group-item">Specialization: @jobOffer.Specialization</li>
            </ul>
            <div class="card-footer text-center"><small>Added on @jobOffer.AddedOn.ToShortDateString()</small></div>
        </div>
    }
</div>
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @for (int i = 1; i <= Model.Count / 3; i++)
        {
            if (selectedPage + 1 == i)
            {
                <li class="page-item"><a class="page-link active" href="#">@i</a></li>

            }
            else
            {
                <li class="page-item"><a class="page-link" href="#">@i</a></li>
            }
        }
    </ul>
</nav>

